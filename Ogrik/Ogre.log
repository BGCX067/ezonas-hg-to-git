13:25:49: Creating resource group General
13:25:49: Creating resource group Internal
13:25:49: Creating resource group Autodetect
13:25:49: SceneManagerFactory for type 'DefaultSceneManager' registered.
13:25:49: Registering ResourceManager for type Material
13:25:49: Registering ResourceManager for type Mesh
13:25:49: Registering ResourceManager for type Skeleton
13:25:49: MovableObjectFactory for type 'ParticleSystem' registered.
13:25:49: OverlayElementFactory for type Panel registered.
13:25:49: OverlayElementFactory for type BorderPanel registered.
13:25:49: OverlayElementFactory for type TextArea registered.
13:25:49: Registering ResourceManager for type Font
13:25:49: ArchiveFactory for archive type FileSystem registered.
13:25:49: ArchiveFactory for archive type Zip registered.
13:25:49: DDS codec registering
13:25:49: FreeImage version: 3.13.1
13:25:49: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
13:25:49: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic,bay,bmq,cr2,crw,cs1,dc2,dcr,dng,erf,fff,hdr,k25,kdc,mdc,mos,mrw,nef,orf,pef,pxn,raf,raw,rdc,sr2,srf,arw,3fr,cine,ia,kc2,mef,nrw,qtk,rw2,sti,drf,dsc,ptx,cap,iiq,rwz
13:25:49: Registering ResourceManager for type HighLevelGpuProgram
13:25:49: Registering ResourceManager for type Compositor
13:25:49: MovableObjectFactory for type 'Entity' registered.
13:25:49: MovableObjectFactory for type 'Light' registered.
13:25:49: MovableObjectFactory for type 'BillboardSet' registered.
13:25:49: MovableObjectFactory for type 'ManualObject' registered.
13:25:49: MovableObjectFactory for type 'BillboardChain' registered.
13:25:49: MovableObjectFactory for type 'RibbonTrail' registered.
13:25:49: Loading library ./plugins\RenderSystem_GL_d
13:25:49: Installing plugin: GL RenderSystem
13:25:49: OpenGL Rendering Subsystem created.
13:25:50: Plugin successfully installed
13:25:50: *-*-* OGRE Initialising
13:25:50: *-*-* Version 1.7.2 (Cthugha)
13:25:50: CPU Identifier & Features
13:25:50: -------------------------
13:25:50:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
13:25:50:  *      SSE: yes
13:25:50:  *     SSE2: yes
13:25:50:  *     SSE3: yes
13:25:50:  *      MMX: yes
13:25:50:  *   MMXEXT: yes
13:25:50:  *    3DNOW: no
13:25:50:  * 3DNOWEXT: no
13:25:50:  *     CMOV: yes
13:25:50:  *      TSC: yes
13:25:50:  *      FPU: yes
13:25:50:  *      PRO: yes
13:25:50:  *       HT: no
13:25:50: -------------------------
13:25:50: *** Starting Win32GL Subsystem ***
13:25:50: GLRenderSystem::_createRenderWindow "Ogre3D Beginners Guide", 640x480 windowed  miscParams: FSAA=0 FSAAHint= colourDepth=32 displayFrequency=0 gamma=false vsync=false vsyncInterval=1 
13:25:50: Created Win32Window 'Ogre3D Beginners Guide' : 648x507, 32bpp
13:25:50: GL_VERSION = 3.2.0
13:25:50: GL_VENDOR = NVIDIA Corporation
13:25:50: GL_RENDERER = GeForce GTS 240/PCI/SSE2
13:25:50: GL_EXTENSIONS = GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_copy_buffer GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_draw_buffers GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_fragment_coord_conventions GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_map_buffer_range GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_provoking_vertex GL_ARB_seamless_cube_map GL_ARB_shader_objects GL_ARB_shading_language_100 GL_ARB_shadow GL_ARB_sync GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_compression GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_buffer_load GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_expand_normal GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum GL_WIN_swap_hint WGL_EXT_swap_control 
13:25:50: Supported WGL extensions: WGL_ARB_buffer_region WGL_ARB_create_context WGL_ARB_create_context_profile WGL_ARB_extensions_string WGL_ARB_make_current_read WGL_ARB_multisample WGL_ARB_pbuffer WGL_ARB_pixel_format WGL_ARB_pixel_format_float WGL_ARB_render_texture WGL_ATI_pixel_format_float WGL_EXT_extensions_string WGL_EXT_framebuffer_sRGB WGL_EXT_pixel_format_packed_float WGL_EXT_swap_control WGL_NV_float_buffer WGL_NV_multisample_coverage WGL_NV_render_depth_texture WGL_NV_render_texture_rectangle WGL_NVX_DX_interop 
13:25:50: ***************************
13:25:50: *** GL Renderer Started ***
13:25:50: ***************************
13:25:50: Registering ResourceManager for type GpuProgram
13:25:50: GLSL support detected
13:25:50: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
13:25:50: FBO PF_UNKNOWN depth/stencil support: D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_L8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A4L4 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_BYTE_LA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_R5G6B5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_B5G6R5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_B8G8R8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_R3G3B2 depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT16_R depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT32_R depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: FBO PF_SHORT_RGB depth/stencil support: D0S0 D16S0 D24S0 D32S0 Packed-D24S8 
13:25:50: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
13:25:50: RenderSystem capabilities
13:25:50: -------------------------
13:25:50: RenderSystem Name: OpenGL Rendering Subsystem
13:25:50: GPU Vendor: nvidia
13:25:50: Device Name: GeForce GTS 240/PCI/SSE2
13:25:50: Driver Version: 3.2.0.0
13:25:50:  * Fixed function pipeline: yes
13:25:50:  * Hardware generation of mipmaps: yes
13:25:50:  * Texture blending: yes
13:25:50:  * Anisotropic texture filtering: yes
13:25:50:  * Dot product texture operation: yes
13:25:50:  * Cube mapping: yes
13:25:50:  * Hardware stencil buffer: yes
13:25:50:    - Stencil depth: 8
13:25:50:    - Two sided stencil support: yes
13:25:50:    - Wrap stencil values: yes
13:25:50:  * Hardware vertex / index buffers: yes
13:25:50:  * Vertex programs: yes
13:25:50:  * Number of floating-point constants for vertex programs: 1024
13:25:50:  * Number of integer constants for vertex programs: 0
13:25:50:  * Number of boolean constants for vertex programs: 0
13:25:50:  * Fragment programs: yes
13:25:50:  * Number of floating-point constants for fragment programs: 512
13:25:50:  * Number of integer constants for fragment programs: 0
13:25:50:  * Number of boolean constants for fragment programs: 0
13:25:50:  * Geometry programs: yes
13:25:50:  * Number of floating-point constants for geometry programs: 512
13:25:50:  * Number of integer constants for geometry programs: 0
13:25:50:  * Number of boolean constants for geometry programs: 0
13:25:50:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4gp gpu_gp nvgp4 vp30 vp40
13:25:50:  * Texture Compression: yes
13:25:50:    - DXT: yes
13:25:50:    - VTC: yes
13:25:50:    - PVRTC: no
13:25:50:  * Scissor Rectangle: yes
13:25:50:  * Hardware Occlusion Query: yes
13:25:50:  * User clip planes: yes
13:25:50:  * VET_UBYTE4 vertex element type: yes
13:25:50:  * Infinite far plane projection: yes
13:25:50:  * Hardware render-to-texture: yes
13:25:50:  * Floating point textures: yes
13:25:50:  * Non-power-of-two textures: yes
13:25:50:  * Volume textures: yes
13:25:50:  * Multiple Render Targets: 8
13:25:50:    - With different bit depths: yes
13:25:50:  * Point Sprites: yes
13:25:50:  * Extended point parameters: yes
13:25:50:  * Max Point Size: 63.375
13:25:50:  * Vertex texture fetch: yes
13:25:50:  * Number of world matrices: 0
13:25:50:  * Number of texture units: 32
13:25:50:  * Stencil buffer depth: 8
13:25:50:  * Number of vertex blend matrices: 0
13:25:50:    - Max vertex textures: 32
13:25:50:    - Vertex textures shared: yes
13:25:50:  * Render to Vertex Buffer : yes
13:25:50:  * GL 1.5 without VBO workaround: no
13:25:50:  * Frame Buffer objects: yes
13:25:50:  * Frame Buffer objects (ARB extension): no
13:25:50:  * Frame Buffer objects (ATI extension): no
13:25:50:  * PBuffer support: yes
13:25:50:  * GL 1.5 without HW-occlusion workaround: no
13:25:50: Registering ResourceManager for type Texture
13:25:50: DefaultWorkQueue('Root') initialising on thread 001545C0.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0015C178 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 001630B8 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00163150 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00168FC8 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0016B578 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0016DDA0 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00170350 starting.
13:25:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00172B80 starting.
13:25:50: Particle Renderer Type 'billboard' registered
13:25:50: Creating resource group 
13:25:50: Added resource location './mymaterials' of type 'FileSystem' to resource group ''
13:25:50: Added resource location 'C:/Ogre172/media/materials/textures' of type 'FileSystem' to resource group ''
13:25:50: Added resource location 'C:/Ogre172/media/packs/Sinbad.zip' of type 'Zip' to resource group ''
13:25:50: Parsing scripts for resource group 
13:25:50: Parsing script highlight.material
13:25:50: Parsing script normal.material
13:25:50: Parsing script textures.material
13:25:50: Parsing script Sinbad.material
13:25:50: Finished parsing scripts for resource group 
13:25:50: Parsing scripts for resource group Autodetect
13:25:50: Finished parsing scripts for resource group Autodetect
13:25:50: Parsing scripts for resource group General
13:25:50: Finished parsing scripts for resource group General
13:25:50: Parsing scripts for resource group Internal
13:25:50: Finished parsing scripts for resource group Internal
13:25:50: Mesh: Loading Sinbad.mesh.
13:25:50: Skeleton: Loading Sinbad.skeleton
13:25:50: WARNING: Sinbad.mesh is an older format ([MeshSerializer_v1.40]); you should upgrade it as soon as possible using the OgreMeshUpgrade tool.
13:25:50: Texture: sinbad_body.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
13:25:50: Texture: sinbad_clothes.tga: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
13:25:50: Texture: sinbad_sword.tga: Loading 1 faces(PF_R8G8B8,256x256x1) with 8 generated mipmaps from Image. Internal format is PF_X8R8G8B8,256x256x1.
13:25:50: WARNING: the mesh 'Sinbad.mesh' includes vertices with more than 4 bone assignments. The lowest weighted assignments beyond this limit have been removed, so your animation may look slightly different. To eliminate this, reduce the number of bone assignments per vertex on your mesh to 4.
13:25:50: Texture: egyptrockyfull.jpg: Loading 1 faces(PF_R8G8B8,512x512x1) with 9 generated mipmaps from Image. Internal format is PF_X8R8G8B8,512x512x1.
13:26:50: DefaultWorkQueue('Root') shutting down on thread 001545C0.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00170350 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 001630B8 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0016B578 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00172B80 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00168FC8 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0015C178 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 0016DDA0 stopped.
13:26:50: DefaultWorkQueue('Root')::WorkerFunc - thread 00163150 stopped.
13:26:50: *-*-* OGRE Shutdown
13:26:50: Unregistering ResourceManager for type Compositor
13:26:50: Unregistering ResourceManager for type Font
13:26:50: Unregistering ResourceManager for type Skeleton
13:26:50: Unregistering ResourceManager for type Mesh
13:26:50: Unregistering ResourceManager for type HighLevelGpuProgram
13:26:50: Uninstalling plugin: GL RenderSystem
13:26:50: Unregistering ResourceManager for type GpuProgram
13:26:50: *** Stopping Win32GL Subsystem ***
13:26:50: Unregistering ResourceManager for type Texture
13:26:50: Plugin successfully uninstalled
13:26:50: Unloading library ./plugins\RenderSystem_GL_d
13:26:50: Unregistering ResourceManager for type Material
